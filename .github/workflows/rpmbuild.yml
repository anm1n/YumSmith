name: Auto build rpm
on:
  push:
    branches:
      - main

jobs:
  job1:
    runs-on: ubuntu-latest
    container:
      image: opensuse/tumbleweed:latest
      options: --hostname Build-Test

    steps:
      - name: Setup git, jq
        run: |
          zypper --non-interactive refresh
          zypper --non-interactive install git jq

      - name: Setup rclone
        env:
          RCLONE_CONFIG: ${{ secrets.RCLONE_CONFIG }}
        run: |
          zypper --non-interactive install rclone
          mkdir -p ~/.config/rclone
          echo "$RCLONE_CONFIG" > ~/.config/rclone/rclone.conf

      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Pull list.json
        run: rclone copy remote:/repodata/list.json lock.json

      - name: Check NVR
        run: scripts/nvrop check

      - name: Setup basic build dependency
        if: ${{ env.NEED_BUILD == 'true' }}
        run: |
          zypper --non-interactive install make rpm-build rpmdevtools pattern:devel_basis createrepo_c

      - name: Build rpms
        if: ${{ env.NEED_BUILD == 'true' }}
        run: scripts/build

      - name: Setup gpg
        if: ${{ env.NEED_BUILD == 'true' }}
        env: 
          GPG_SEC: ${{ secrets.GPG_SEC }}
          GPG_SEC_ID: ${{ secrets.GPG_SEC_ID }}
        run: |
          zypper --non-interactive install gpg2
          echo "▶️ 导入GPG Key"
          echo "%_gpg_name $GPG_SEC_ID" > ~/.rpmmacros
          echo "$GPG_SEC" | gpg --import --batch --yes

      - name: Sign rpms
        if: ${{ env.NEED_BUILD == 'true' }}
        run: |
          find "/usr/src/packages/RPMS" -type f -name "*.rpm" -exec rpm --addsign {} \;

      - name: Push rpms
        if: ${{ env.NEED_BUILD == 'true' }}
        run: |
          find "/usr/src/packages/RPMS/x86_64" -type f -name "*.rpm" ! -name "*debugsource*" ! -name "*debuginfo*" -exec rclone copy {} remote:/x86_64 --progress \;
          find "/usr/src/packages/RPMS/noarch" -type f -name "*.rpm" ! -name "*debugsource*" ! -name "*debuginfo*" -exec rclone copy {} remote:/noarch --progress \;

      - name: Trigger metadata update
        if: ${{ env.NEED_BUILD == 'true' }}
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: update-metadata.yml

