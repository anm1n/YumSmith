name: Auto build RPMs
on:
  workflow_call:
    inputs:
      pkg-path:
        description: "A relative path where can found spec files"
        required: true
        type: string
      rclone-repo-name:
        description: "Section name of the yum repository in Rclone"
        required: false
        type: string
        default: remote
      metadata-workflow-name:
        required: true
        type: string
      matrix-file:
        required: true
        type: string

    secrets:
      RCLONE_CONFIG_SECTION:
        description: "Extract from the rclone.conf file content, only the repository section is needed"
        required: true
      GPG_SECRET:
        required: true
      GPG_SECRET_ID:
        required: true
      TOKEN:
        required: false

jobs:
  prepare:
    runs-on: ubuntu-24.04
    outputs:
      matrix: ${{ steps.gen-matrix.outputs.matrix }}
    steps:
      - name: Checkout tools repository
        uses: actions/checkout@v5
        with:
          repository: anm1n/yum2
          path: tools
          fetch-depth: 1
          token: ${{ secrets.TOKEN || secrets.GITHUB_TOKEN }}

      - name: Checkout SPECs repository
        uses: actions/checkout@v5
        with:
          path: specs
          fetch-depth: 1

      - name: Setup Rclone
        run: |
          sudo apt update
          sudo apt install rclone
          mkdir -p ~/.config/rclone

      - name: Pull status.json
        env:
          RCLONE_CONFIG_SECTION: ${{ secrets.RCLONE_CONFIG_SECTION }}
          RCLONE_REPO_NAME: ${{ inputs.rclone-repo-name }}
        run: |
          echo "$RCLONE_CONFIG_SECTION" | base64 -d > ~/.config/rclone/rclone.conf

          if rclone ls ${RCLONE_REPO_NAME}:/repodata/status.json > /dev/null ; then
            rclone copy ${RCLONE_REPO_NAME}:/repodata/status.json .
          else
            echo "Warn: status.json not exist on $RCLONE_REPO_NAME"
            echo "Warn: will rebuild everything"
            echo '{}' > status.json
          fi

          shred -u ~/.config/rclone/rclone.conf

      - name: Gen spec.json
        run: |
          tools/scripts/gen-spec -o spec.json -r specs/${{ inputs.pkg-path }} -m specs/${{ inputs.matrix-file }}
          cat spec.json

      - name: Gen diff.json
        run: |
          tools/scripts/gen-diff spec.json status.json > diff.json
          cat diff.json

      - name: Gen matrix
        id: gen-matrix
        run: |
          tools/scripts/gen-matrix -d diff.json -r specs/${{ inputs.pkg-path }} -m specs/${{ inputs.matrix-file }} > matrix.json
          cat matrix.json

          echo "matrix<<__EOF___" >> $GITHUB_OUTPUT
          cat matrix.json >> $GITHUB_OUTPUT
          echo "__EOF___" >> $GITHUB_OUTPUT


  build:
    needs: prepare
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.prepare.outputs.matrix) }}

    steps:
      - name: test matrix
        run: |
          echo ${{ matrix.pkg }}
          echo ${{ matrix.version }}
          echo ${{ matrix.release }}
          echo ${{ matrix.distro }}
          echo ${{ matrix.branch }}
          echo ${{ matrix.image }}
          sleep 10s
