#!/bin/bash
set -e
# 用于构建RPM包

YUM_TOP_DIR="/usr/src/packages"

clear_dir () {
  words=("BUILD" "BUILDROOT" "SOURCES")
  for i in "${words[@]}"; do
    # 仅在目录中有文件时清空目录
    if [[ "$(ls "${YUM_TOP_DIR}/${i}" | wc -l)" -gt 0 ]]; then
      rm -r "${YUM_TOP_DIR}/${i}/"*
    fi
  done
}

# 读取update.json，获取顶级键的Name即可
file="update.json"
# 遍历顶级键name
for name in $(jq -r 'keys[]' "$file"); do

  # 由Name去复制SOURCE
  cp "packages/${name}/"* "${YUM_TOP_DIR}/SOURCES"
  SPEC_FILE="${YUM_TOP_DIR}/SOURCES/${name}.spec"
  # 如果有构建依赖，则安装
  if grep -q '^BuildRequires' "$SPEC_FILE"; then
    echo "为 $name 安装依赖"
    # 如果一个宏来自未安装的包，rpmspec将不能解析出该宏，导致错误
    # 因此先安装显式指定的构建依赖
    zypper --non-interactive install \
      $(cat ${SPEC_FILE} | grep BuildRequires | tr -s ' ' | cut -d' ' -f2 | xargs)

    # 如果有宏指定了额外的构建依赖，将在这里被安装
    zypper --non-interactive install \
      $(rpmspec --parse ${SPEC_FILE} | grep BuildRequires | tr -s ' ' | cut -d' ' -f2 | xargs)
  fi

  # 构建包
  echo "开始构建: $name"
  rpmbuild --undefine=_disable_source_fetch -bb "$SPEC_FILE"
  echo "构建完成: $name"
  clear_dir
done
